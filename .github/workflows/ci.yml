name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    name: Node
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ github.sha }}

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile


  release:
    runs-on: ubuntu-latest
    needs: [install]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ github.sha }}

      - name: Determine tag
        id: determine_tag
        run: |
          echo "tag=$(echo $GITHUB_REF | grep -Eo 'alpha|beta|rc')" >> $GITHUB_OUTPUT

      - name: Add auth token to npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - name: Publish to versioned tag
        if: steps.determine_tag.outputs.tag != ''
        run: |
          echo "Publishing to ${{ steps.determine_tag.outputs.tag }} tag"
          pnpm publish --tag ${{ steps.determine_tag.outputs.tag }}

      - name: Publish to latest
        if: steps.determine_tag.outputs.tag == ''
        run: |
          echo "Publishing to latest"
          pnpm publish